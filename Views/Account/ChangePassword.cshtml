@model MapTask.Models.ChangePasswordViewModel

@{
    ViewData["Title"] = "Change Password";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">

<h2 class="text-center text-primary mb-4">🔁 Change Your Password</h2>

<div class="container d-flex justify-content-center">
    <div class="col-md-6 col-lg-5">
        @if (ViewBag.Message != null)
        {
            <div class="alert alert-info alert-dismissible fade show text-center" role="alert">
                @ViewBag.Message
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="card shadow-lg border-0 rounded-4">
            <div class="card-body p-4 bg-light">
                <form asp-action="ChangePassword" asp-controller="Account" method="post">
                    <div class="mb-3">
                        <label asp-for="CurrentPassword" class="form-label fw-semibold">Current Password</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-lock-fill"></i></span>
                            <input asp-for="CurrentPassword" class="form-control" type="password" id="currentPasswordInput" />
                        </div>
                        <span asp-validation-for="CurrentPassword" class="text-danger small"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="NewPassword" class="form-label fw-semibold">New Password</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-shield-lock-fill"></i></span>
                            <input asp-for="NewPassword" class="form-control" type="password" id="newPasswordInput" oninput="checkStrength(this.value)" />
                            <span class="input-group-text cursor-pointer" onclick="togglePassword('newPasswordInput')"><i class="bi bi-eye-fill"></i></span>
                        </div>

                        <ul class="list-unstyled small mt-2" id="passwordRules">
                            <li id="lengthRule" class="text-danger">❌ At least 8 characters</li>
                            <li id="capitalRule" class="text-danger">❌ At least one uppercase letter</li>
                            <li id="numberRule" class="text-danger">❌ At least one number</li>
                            <li id="specialRule" class="text-danger">❌ At least one special character</li>
                        </ul>

                        <span asp-validation-for="NewPassword" class="text-danger small"></span>
                    </div>

                    <div class="mb-4">
                        <label asp-for="ConfirmPassword" class="form-label fw-semibold">Confirm Password</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-check-circle-fill"></i></span>
                            <input asp-for="ConfirmPassword" class="form-control" type="password" id="confirmPasswordInput" />
                            <span class="input-group-text cursor-pointer" onclick="togglePassword('confirmPasswordInput')"><i class="bi bi-eye-fill"></i></span>
                        </div>
                        <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
                    </div>

                    <button type="submit" class="btn btn-success w-100 fw-bold shadow-sm">🔐 Update Password</button>

                    <div class="text-center mt-3">
                        <a asp-controller="Map" asp-action="Index" class="text-decoration-none text-muted">
                            ⬅️ Back to Home
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function checkStrength(password) {
            const lengthRule = document.getElementById("lengthRule");
            const capitalRule = document.getElementById("capitalRule");
            const numberRule = document.getElementById("numberRule");
            const specialRule = document.getElementById("specialRule");

            const lengthOk = password.length >= 8;
            const capitalOk = /[A-Z]/.test(password);
            const numberOk = /[0-9]/.test(password);
            const specialOk = /[\W_]/.test(password); // includes _

            toggleRuleStyle(lengthRule, lengthOk);
            toggleRuleStyle(capitalRule, capitalOk);
            toggleRuleStyle(numberRule, numberOk);
            toggleRuleStyle(specialRule, specialOk);
        }

        function toggleRuleStyle(element, isValid) {
            element.classList.remove("text-danger", "text-success");
            element.classList.add(isValid ? "text-success" : "text-danger");
            element.innerHTML = `${isValid ? "✅" : "❌"} ${element.textContent.slice(2)}`;
        }

        function togglePassword(inputId) {
            const inputField = document.getElementById(inputId);
            const icon = inputField.nextElementSibling.querySelector("i");
            if (inputField.type === "password") {
                inputField.type = "text";
                icon.classList.remove("bi-eye-fill");
                icon.classList.add("bi-eye-slash-fill");
            } else {
                inputField.type = "password";
                icon.classList.remove("bi-eye-slash-fill");
                icon.classList.add("bi-eye-fill");
            }
        }
    </script>
}
